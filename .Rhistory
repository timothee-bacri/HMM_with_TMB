matplot(x= dat$x,t( apply(MM, 1, function(x) x*coef(mod))), type = "l", xlab = "x", ylab = "Basis functions")
matplot(x= dat$x,t( apply(MM, 1, function(x) x*coef(mod))), type = "l", xlab = "x", ylab = "Basis functions")
lines(dat$x, y, lwd = 2, col = 2)
matplot(x= dat$x, MM[,-1], type = "l", xlab = "x", ylab = "Basis functions")
matplot(x= dat$x,t( apply(MM, 1, function(x) x*coef(mod))), type = "l", xlab = "x", ylab = "Basis functions")
lines(dat$x, y, lwd = 2, col = 2)
matplot(x= dat$x,t( apply(MM, 1, function(x) x*coef(mod))), type = "l", xlab = "x", ylab = "Basis functions")
points(dat$x,dat$y, pch = 19, cex .2)
matplot(x= dat$x,t( apply(MM, 1, function(x) x*coef(mod))), type = "l", xlab = "x", ylab = "Basis functions")
points(dat$x,dat$y, pch = 19, cex =.2)
lines(dat$x, y, lwd = 2, col = 2)
matplot(x= dat$x, MM[,-1], type = "l", xlab = "x", ylab = "Basis functions")
matplot(x= dat$x,t( apply(MM, 1, function(x) x*coef(mod))), type = "l", xlab = "x", ylab = "y")
matplot(x= dat$x,t( apply(MM, 1, function(x) x*coef(mod))), type = "l", xlab = "x", ylab = "y")
points(dat$x,dat$y, pch = 19, cex =.2)
lines(dat$x, y, lwd = 2, col = 2)
matplot(x= dat$x,t( apply(MM, 1, function(x) x*coef(mod))), type = "l", xlab = "x", ylab = "y")
points(dat$x,dat$y, pch = 19, cex =.2)
lines(dat$x, y, lwd = 3, col = 2)
matplot(x= dat$x,t( apply(MM, 1, function(x) x*coef(mod))), type = "l", xlab = "x", ylab = "y")
points(dat$x,dat$y, pch = 19, cex =.2)
lines(dat$x, rowSums(t( apply(MM, 1, function(x) x*coef(mod)))), lwd = 3, col = 2)
mod1 <- lm(mpg ~ wt + hp, data = mtcars)
summary(mod1)
mod <- gam(length  ~ age, data = Kimura)
summary(mod)
mod <- gam(length  ~ s(age), data = Kimura)
summary(mod)
plot(mod)
mod <- gam(length  ~ s(age, by = sex), data = Kimura)
summary(mod)
ggplot(aes(x = age, y = length, col = sex), data= Kimura) + geom_point() + geom_smooth(method = "gam")
mod <- gam(length  ~ s(age, by = sex, k = 15), data = Kimura)
mod <- gam(length  ~ s(age, by = sex), data = Kimura)
summary(mod)
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(method = "gam")
?s
?geom_smooth
?s
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(method = "gam", method.args = list(bs = "tp"))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(method = "gam", method.args = list(bs = "tp"))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(method = "gam", formula = y~s(x))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(method = "gam", formula = y~s(x))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(method = "gam", formula = y~s(x, bs = "tp"))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(method = "gam", formula = y~s(x, bs = "tp"))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(method = "gam", formula = y~s(x))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(method = "gam", formula = y~s(x, k = 3))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(method = "gam", formula = y~s(x, k = 4))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(method = "gam", formula = y~s(x, k = 4), method.args = list(method = "REML"))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(method = "gam", formula = y~s(x, k = 4), method.args = list(method = "REML"))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(method = "gam", formula = y~s(x), method.args = list(method = "REML"))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(formula = y~s(x), method = "gam",
method.args = list(method = "REML"))
?s
mod <- gam(length  ~ s(age, by = sex), data = Kimura)
mod <- gam(length  ~ s(age, by = sex), data = Kimura)
summary(mod)
plot(mod)
mod <- gam(length  ~ s(age, by = sex), data = Kimura)
summary(mod)
plot(mod, which = 1)
mod <- gam(length  ~ s(age, by = sex), data = Kimura)
summary(mod)
plot(mod, which = 2)
mod <- gam(length  ~ s(age, by = sex), data = Kimura)
summary(mod)
plot(mod, 2)
mod <- gam(length  ~ s(age, by = sex), data = Kimura)
summary(mod)
plot(mod, 1)
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(formula = y~s(x, by = sex), method = "gam",
method.args = list(method = "REML"))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(formula = y~s(x, by = sex), method = "gam",
method.args = list(method = "REML"))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(aes(formula = y~s(x, by = sex)), method = "gam",
method.args = list(method = "REML"))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(formula = y~s(x), method = "gam",
method.args = list(method = "REML"))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(formula = y~s(x, k = 3), method = "gam",
method.args = list(method = "REML"))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(formula = y~s(x, k = 4), method = "gam",
method.args = list(method = "REML"))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(formula = y~s(x, k = 5), method = "gam",
method.args = list(method = "REML"))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(formula = y~s(x, k = 6), method = "gam",
method.args = list(method = "REML"))
geom_smooth(formula = y~s(x, k = 4), method = "gam",
method.args = list(method = "REML"))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(formula = y~s(x, k = 4), method = "gam",
method.args = list(method = "REML"))
ggplot(aes(x = age, y = length, col = sex), data= Kimura) +
geom_point() +
geom_smooth(formula = y~s(x), method = "gam",
method.args = list(method = "REML"))
mod <- gam(length  ~ s(age, by = sex), data = Kimura)
summary(mod)
rm(list=ls())
knitr::opts_chunk$set(echo = FALSE, message = FALSE)
def.chunk.hook  <- knitr::knit_hooks$get("chunk")
knitr::knit_hooks$set(chunk = function(x, options) {
x <- def.chunk.hook(x, options)
ifelse(options$size != "normalsize", paste0("\n \\", options$size,"\n\n", x, "\n\n \\normalsize"), x)
})
library(tidyverse)
mean(testset$y == testset$pred)
set.seed(123)
n = 600
df <- tibble(
x1 = runif(n),
x2 = runif(n),
y  = factor(ifelse(x2 - 1.24*x1 <0, 1, 0))
)
head(df, n = 10)
trainsplit = which(ifelse(runif(nrow(df))<0.8, TRUE, FALSE))
trainset <- df[trainsplit,]
testset <- df[-trainsplit,]
(p <- ggplot(trainset, aes(x = x1, y =x2, col = y)) + geom_point() +theme_bw() +
scale_color_manual(values = c("red","blue"))+
geom_abline(slope = 1.24, intercept = 0, col = "magenta", lty = 2))
library(e1071)
svm_model <- svm(y~.,
data = trainset,
tyoe = "C-classification",
kernel = "linear",
scale = FALSE)
pred <- predict(svm_model, newdata = trainset)
trainset$pred <- pred
mean(trainset$y == trainset$pred)
pred <- predict(svm_model, newdata = testset)
testset$pred <- pred
mean(testset$y == testset$pred)
p <- ggplot(data = trainset, aes( x= x1, y = x2, color = pred))+
geom_point() +
scale_color_manual(values = c("red","blue"))
w <- t(svm_model$coefs) %*% svm_model$SV
slope_1 <- -w[1]/w[2]
intercept_1 <- svm_model$rho/w[2]
p + geom_abline(slope = slope_1, intercept = intercept_1)+
geom_abline(slope = 1.24, intercept = 0, col = "magenta", lty = 2)
#geom_abline(slope = slope_1, intercept = intercept_1 - 1/w[2],
#           linetype = "dashed")+
#geom_abline(slope = slope_1, intercept = intercept_1 + 1/w[2],
#linetype = "dashed")
p <- ggplot(data = testset, aes( x= x1, y = x2, color = pred))+
geom_point() +
scale_color_manual(values = c("red","blue"))
w <- t(svm_model$coefs) %*% svm_model$SV
slope_1 <- -w[1]/w[2]
intercept_1 <- svm_model$rho/w[2]
p + geom_abline(slope = slope_1, intercept = intercept_1)+
geom_abline(slope = 1.24, intercept = 0, col = "magenta", lty = 2)
#geom_abline(slope = slope_1, intercept = intercept_1 - 1/w[2],
#           linetype = "dashed")+
#geom_abline(slope = slope_1, intercept = intercept_1 + 1/w[2],
#linetype = "dashed")
svm_model
summary(svm_model)
rm(list=ls())
set.seed(123)
n = 600
df <- tibble(
x1 = runif(n),
x2 = runif(n),
y  = factor(ifelse(x2 - 1.24*x1 <0, 1, 0))
)
head(df, n = 10)
trainsplit = which(runif(nrow(df))<0.8)
trainset <- df[trainsplit,]
testset <- df[-trainsplit,]
(p <- ggplot(trainset, aes(x = x1, y =x2, col = y)) + geom_point() +theme_bw() +
scale_color_manual(values = c("red","blue"))+
geom_abline(slope = 1.24, intercept = 0, col = "magenta", lty = 2))
rm(n)
rm(p)
library(e1071)
svm_model <- svm(y ~ .,
data = trainset,
type = "C-classification",
kernel = "linear",
scale = FALSE)
svm_model
?svm
summary(svm_model)
svm_model
svm_model
svm_model
summary(svm_model)
mean(trainset$y == fitted(svm_model))
pred <- predict(svm_model, newdata = testset)
mean(testset$y == pred)
svm_model <- svm(y ~ .,
data = trainset,
type = "C-classification",
kernel = "linear",
scale = FALSE,
cost = 100)
svm_model
summary(svm_model)
mean(trainset$y == fitted(svm_model))
svm_model <- svm(y ~ .,
data = trainset,
type = "C-classification",
kernel = "linear",
scale = FALSE)
svm_model
summary(svm_model)
svm_model <- svm(y ~ .,
data = trainset,
type = "C-classification",
kernel = "linear",
scale = FALSE,
cost = 100)
svm_model
summary(svm_model)
mean(trainset$y == fitted(svm_model))
pred <- predict(svm_model, newdata = testset)
mean(testset$y == pred)
25*.5*(2-0.5+25*0.5)
x <- rbinom(n = 10000, size = 25, prob = .5)
mean(x*(x+1))
?pacf
s1 <- 10.9
s2 <- 19.11
n1 <- 8983
n2 <- 6604
v <- (s1^2/n1+s2^2/n2)^2/(
(s1^2/n1)^2/(n1-1)+(s2^2/n2)^2/(n2-1))
v
(3.25+2.89)/sqrt(s1^2/n1+s2^2/n2)
(3.25-2.89)/sqrt(s1^2/n1+s2^2/n2)
(3.26-2.89)/sqrt(s1^2/n1+s2^2/n2)
(3.26+2.89)/sqrt(s1^2/n1+s2^2/n2)
5939*5053/14922
x <- arima.sim(list(ar = c(.9,.4), n = 100))
x <- arima.sim(list(ar = c(.9,.4)), n = 100)
x <- arima.sim(list(ar = c(.9,-.4)), n = 100)
acf(x)
x <- arima.sim(list(ar = c(.9,-.4)), n = 1000); acf(x)
x <- arima.sim(list(ar = c(.9,.04)), n = 1000); acf(x)
x <- arima.sim(list(ar = c(.9,.09)), n = 1000); acf(x)
x <- arima.sim(list(ar = c(.4,.09)), n = 1000); acf(x)
x <- arima.sim(list(ar = c(.5,.09)), n = 1000); acf(x)
x <- arima.sim(list(ar = c(.5,.09)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.8,.09)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.8,.09)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.8,.09)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.8,.09)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.8,-.09)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.9,-.09)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.9,.09)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.8,.09)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.8)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.9)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.9)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.9)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.9)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.9)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.9)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.9)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.9)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.9)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.95)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.95)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.95, .01)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.95, .01)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.95, .01)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.95, .01)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.95, .01)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.95, .01)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.95, .01)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.95, .01)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.95, .01)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.95, .01)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(.95, .01)), n = 1000); acf(x, lag.max = 40)
x <- arima.sim(list(ar = c(-.95, .01)), n = 1000); acf(x, lag.max = 40)
v
qchisq(.05, df = 4)
qchisq(1-.05, df = 4)
th <- c(.1917, .6914, .1057, .01)
y <- c(1,.9163, 1, 10)
th %*% y
pnorm(-(log(5)-log(4.2))/.6678)
pnorm(-(log(5)-log(3.8))/.6678)
pnorm(-(log(5)-log(3.7))/.6678)
pnorm((log(5)-log(3.7))/.6678)
pnorm((log(5)-log(4.2))/.6678)
pnorm((log(5)-log(2.8))/.6678)
log(1.34924)
0.69*log(1.5-1)
0.69*log(1.5+1)
0.69*llog10(1.5+1)
0.69*log10(1.5+1)
0.69*log10(1.5-1)
th %*% y
y <- c(1, log10(2.5), 1, 10)
th %*% y
y <- c(1, log(2.5), 1, 10)
th %*% y
th <- c(.912,.691, .106, .01)
th %*% y
c3 <- c(-6629, -.5187,-.2756, -.1919)
x <- c(0,1.6,-4,-.4)
c3%*%x
(3.26+2.89)/sqrt(s1^2/n1+s2^2/n2)
v <- (s1^2/n1+s2^2/n2)^2/(
(s1^2/n1)^2/(n1-1)+(s2^2/n2)^2/(n2-1))
v
th <- c(.9117,.691, .106, .01)
th %*% y
log(th %*% y)
y <- c(1, log10(2.5), 1, 10)
th <- c(.9117,.691, .106, .01)
th %*% y
y <- c(1, log10(1.5), 1, 10)
th <- c(.9117,.691, .106, .01)
th %*% y
y <- c(1, log10(2.5), 1, 10)
th <- c(.9117,.691, .106, .01)
th %*% y
y <- c(1, log(2.5), 1, 10)
th <- c(.9117,.691, .106, .01)
th %*% y
log(2.5)
log(1.5)
.691*log(2.5)
qchisq(.95, df = 4)
qchisq(.975, df = 4)
qchisq(.9, df = 4)
qchisq(.95, df = 3)
qchisq(.95, df = 3).8/.668
.8/.668
qchisq(.95, df = 5)
qchisq(.95, df = 4)
qchisq(.95, df = 6)
qchisq(.95, df = 8)
qchisq(.95, df = 7)
qchisq(.9, df =4)
qchisq(.99, df =4)
qchisq(.995, df =4)
c3 <- c(-6629, -.5187,-.2756, -.1919)
x <- c(0,1.6,-4,-.4)
c3%*%x
x <- c(0,1.6,-4,-.1)
c3%*%x
c3 <- c(-.6629, -.5187,-.2756, -.1919)
x <- c(0,1.6,-4,-.1)
x <- c(0,1.3-.69,.69-1.8,-.1)
c3%*%x
pnorm(.4)
(4-2.33)/.6678
pnorm((4-2.33)/.6678)
1-pnorm((4-2.33)/.6678)
exp(1.1343)
exp(1.1343)-1
th <- c(.1917, .6914, .1057, .01)
y <- c(1, 1.5, 1, 10)
th %*% y
th <- c(.912,.6914, .1057, .01)
y <- c(1, 1.5, 1, 10)
th <- c(.912,.6914, .1057, .01)
th %*% y
y <- c(1,log(1.5), 1, 10)
th <- c(.912,.6914, .1057, .01)
th %*% y
y <- c(1,log10(1.5), 1, 10)
th <- c(.912,.6914, .1057, .01)
th %*% y
y <- c(1,log10(1.5+1), 1, 10)
th <- c(.912,.6914, .1057, .01)
th %*% y
exp(1)
exp(1)-1
exp(1.1)-1
exp(1.13)-1
exp(1.1343)-1
pnorm(-.5)
pnorm(.5)
1-pnorm(-.5)
pnorm(.95)
qnorm(.95)
qnorm(.975)
1.03093 - .1506
exp(
1.03093 - .1506
)
exp(.19)
exp(.731)-1
pnorm(1.31)
1-pnorm(1.31)
th <- c(.1917, .6914, .1057, .01)
y <- c(1,log10(1.5+1), 1, 10)
th %*% y
pnorm(3.29)
pnorm(3.924)
(4-1.8)/.6678
pnorm((4-1.8)/.94)
pnorm((log(4)-log(1.8))/.6678)
1-pnorm((log(4)-log(1.8))/.6678)
1-pnorm((log(4)-log(2.7))/.6678)
1-pnorm((log(4+1)-log(2.7))/.6678)
1-pnorm((log(4+1)-log(3.7))/.6678)
1-pnorm((log(4+1)-log(2.8))/.6678)
pnorm(0.789224725)
1-pnorm(0.789224725)
107160*340868/355790
qnorm(.975)
qnorm(.95)
pnorm((1.6094-1.8)/0.6678)
pnorm((1.6094-1..03)/0.6678)
pnorm((1.6094-1.03)/0.6678)
qt(.975)
qt(.975, df = Inf)
qt(.975, df = 20)
qt(.95, df = 20)
pt(2.36, df = Inf)
qt(.99, df = Inf)
qt(.995, df = Inf)
qt(.99, df = Inf)
qt(.9925, df = Inf)
pt(2.36, df = 20)
pnorm(.23)
pnorm(2.83)
1-pnorm(2.83)
exp(-.775)
exp(-.775)+1
setwd("C:/Users/a34844/Dropbox/TMB_HMM/paper1")
setwd("C:/Users/a34844/Documents/HMMs_TMB/HMM_with_TMB")
.9945*18/19
.9435*19/18
.9945*18/20
.9435*20/18
.9435*19/18
rmarkdown::render("README/README.Rmd", output_file = "README.md")
rmarkdown::render("README/README.Rmd", output_file = "README.md")
rmarkdown::render("README/README.Rmd", output_file = "../README.md")
?tmbprofile
setwd("C:/Users/a34844/Documents/HMMs_TMB/HMM_with_TMB")
bookdown::render_book()
rm(list=ls())
bookdown::render_book()
.version()
version()
Rversion()
?version
R.version()
R.Version()
citation("TMB")
?stats::lm
TMB::compile("code/linreg_utils.cpp")
TMB::compile("code/linreg_utils.cpp")
TMB::compile("code/linreg_utils.cpp")
TMB::compile("code/linreg_utils.cpp")
TMB::compile("code/linreg_utils.cpp")
setwd("code")
TMB::compile("../code/linreg_utils.cpp")
TMB::compile("../functions/utils_linreg.cpp")
setwd(../)
setwd("../")
TMB::compile("functions/utils_linreg.cpp")
TMB::compile("functions/utils_linreg.cpp)
TMB::compile("functions/utils_linreg.cpp")
TMB::compile("functions/utils_linreg.cpp")
TMB::compile("code/linreg_utils.cpp")
TMB::compile("code/linreg_utils.cpp")
TMB::compile("code/linreg_utils.cpp")
TMB::compile("code/linreg_utils.cpp")
