# Parameter estimation techniques

## Negative log-likelihood in `TMB`

The Poisson HMM negative log-likelihood function in R can be written this way
```{Rcpp code=readLines("code/poi_hmm.cpp"), eval=FALSE}
```

The case where $m = 1$ doesn't involve a hidden state, and thus is a Poisson regression instead of a Poisson HMM.
Nonetheless, `TMB` also accelerates its estimation and may be useful to the reader.

## Utility functions

### In `TMB`

Defining the negative log-likelihood function requires transforming the working parameters into their natural form.
We define the function `Gamma_w2n` to perform this transformation.

`Stat_dist` handles computing the stationary distribution, although `Delta_w2n` can be used if a non-stationary distribution is provided.

They are defined

```{Rcpp code=readLines("functions/utils.cpp"), eval=FALSE}
```

Transforming the Poisson means into their natural form can be done simply with the `exp` function and doesn't require a dedicated function.

### In `R`

While `TMB` requires functions to transform working parameters to their natural form, pre-processing in `R` requires the opposite.

Functions to achieve this are available in [@zucchini, p. ~51] and are displayed here for convenience
```{r import-files, echo = FALSE, cache = FALSE}
library(knitr)
setwd(dir = "../")
# suppressMessages(source("code/main.R"))
knitr::read_chunk('functions/utils.R')
```

```{r, pois.HMM.pn2pw}
```

This can be broken down into sub-functions if necessary
```{r, Gamma_n2w}
```

In the case where a non-stationary distribution is specified, transforming $\b{\delta}$ is necessary
```{r, Delta_n2w}
```

